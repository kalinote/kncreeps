//inject mocha globally to allow custom interface refer without direct import - bypass bundle issue
global._ = require('lodash');
global.mocha = require('mocha');
global.chai = require('chai');
global.sinon = require('sinon');
global.chai.use(require('sinon-chai'));

// 注入Screeps全局变量
const {
  WORK, CARRY, MOVE, ATTACK, RANGED_ATTACK, HEAL, TOUGH, CLAIM,
  FIND_SOURCES, FIND_STRUCTURES, FIND_CONSTRUCTION_SITES,
  FIND_HOSTILE_CREEPS, FIND_HOSTILE_STRUCTURES, FIND_DROPPED_RESOURCES,
  LOOK_STRUCTURES,
  STRUCTURE_WALL, STRUCTURE_ROAD, STRUCTURE_CONTAINER,
  STRUCTURE_STORAGE, STRUCTURE_EXTENSION, STRUCTURE_SPAWN,
  TERRAIN_MASK_WALL,
  OK, ERR_NOT_IN_RANGE, ERR_NOT_ENOUGH_RESOURCES, ERR_BUSY, ERR_TIRED,
  RESOURCE_ENERGY
} = require('./unit/mock');

// 全局注入Screeps常量
global.WORK = WORK;
global.CARRY = CARRY;
global.MOVE = MOVE;
global.ATTACK = ATTACK;
global.RANGED_ATTACK = RANGED_ATTACK;
global.HEAL = HEAL;
global.TOUGH = TOUGH;
global.CLAIM = CLAIM;

global.FIND_SOURCES = FIND_SOURCES;
global.FIND_STRUCTURES = FIND_STRUCTURES;
global.FIND_CONSTRUCTION_SITES = FIND_CONSTRUCTION_SITES;
global.FIND_HOSTILE_CREEPS = FIND_HOSTILE_CREEPS;
global.FIND_HOSTILE_STRUCTURES = FIND_HOSTILE_STRUCTURES;
global.FIND_DROPPED_RESOURCES = FIND_DROPPED_RESOURCES;

global.LOOK_STRUCTURES = LOOK_STRUCTURES;

global.STRUCTURE_WALL = STRUCTURE_WALL;
global.STRUCTURE_ROAD = STRUCTURE_ROAD;
global.STRUCTURE_CONTAINER = STRUCTURE_CONTAINER;
global.STRUCTURE_STORAGE = STRUCTURE_STORAGE;
global.STRUCTURE_EXTENSION = STRUCTURE_EXTENSION;
global.STRUCTURE_SPAWN = STRUCTURE_SPAWN;

global.TERRAIN_MASK_WALL = TERRAIN_MASK_WALL;

global.OK = OK;
global.ERR_NOT_IN_RANGE = ERR_NOT_IN_RANGE;
global.ERR_NOT_ENOUGH_RESOURCES = ERR_NOT_ENOUGH_RESOURCES;
global.ERR_BUSY = ERR_BUSY;
global.ERR_TIRED = ERR_TIRED;

global.RESOURCE_ENERGY = RESOURCE_ENERGY;

// Override ts-node compiler options
process.env.TS_NODE_PROJECT = 'tsconfig.test.json'
